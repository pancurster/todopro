cmake_minimum_required (VERSION 2.8)
project (empty_project)


# General setup

add_definitions(-std=c++11)

set(BUILD_SHARED_LIBS true)

find_package(Boost COMPONENTS unit_test_framework thread program_options)

include_directories(
    ${Boost_INCLUDE_DIRS}
)

# production libs
AUX_SOURCE_DIRECTORY(../src SRC)

add_library(system_under_test 
    ${SRC}
    #../src/task.cc
    #../src/todopro.cc
    #../src/taskmanager.cc
    ############################
    # add production code here #
    ############################
)

                                        ###################################
set_target_properties(system_under_test # <- add implementation libs here # 
                                        ################################### 
    PROPERTIES COMPILE_FLAGS "-fprofile-arcs -ftest-coverage"
               LINK_FLAGS "-coverage"
)

set (test_SRCS main.cc taskmanager.test.cc)

foreach (src_FILE ${test_SRCS})
    add_executable("${src_FILE}.t" ${src_FILE})
    #add_executable(${CMAKE_PROJECT_NAME} main.cc)


    target_link_libraries("${src_FILE}.t" 
        ${Boost_LIBRARIES}
        system_under_test
        ############################
        # add production libs here #
        ############################
    )
endforeach(src_FILE)

# helpers

add_custom_target(run
    foreach(src_FILE ${test_SRCS})
        COMMAND "${src_FILE}.t"
    endforeach(src_FILE)
)

add_custom_target(coverage
    foreach(src_FILE ${test_SRCS})
        COMMAND find . -name *.gcda | xargs rm -vf
        COMMAND "${src_FILE}.t"
        COMMAND lcov -c -d . -o coverage.info
        COMMAND lcov --remove coverage.info "*/usr/*" "*/opt/*" "*/boost/*" -o coverage.info
        COMMAND genhtml --legend coverage.info -o "${src_FILE}.t.dir"
    endforeach(src_FILE)
)
